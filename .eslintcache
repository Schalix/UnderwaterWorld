[{"C:\\Users\\m\\Documents\\Jobs\\CodeAcademyBerlin\\Projects\\06_reactProgressiveApp\\fishwatch\\src\\index.js":"1","C:\\Users\\m\\Documents\\Jobs\\CodeAcademyBerlin\\Projects\\06_reactProgressiveApp\\fishwatch\\src\\App.js":"2","C:\\Users\\m\\Documents\\Jobs\\CodeAcademyBerlin\\Projects\\06_reactProgressiveApp\\fishwatch\\src\\reportWebVitals.js":"3","C:\\Users\\m\\Documents\\Jobs\\CodeAcademyBerlin\\Projects\\06_reactProgressiveApp\\fishwatch\\src\\components\\List.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":175,"mtime":1611342048134,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1347,"mtime":1611342042860,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"4xtq7c",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"C:\\Users\\m\\Documents\\Jobs\\CodeAcademyBerlin\\Projects\\06_reactProgressiveApp\\fishwatch\\src\\index.js",[],["20","21"],"C:\\Users\\m\\Documents\\Jobs\\CodeAcademyBerlin\\Projects\\06_reactProgressiveApp\\fishwatch\\src\\App.js",[],"C:\\Users\\m\\Documents\\Jobs\\CodeAcademyBerlin\\Projects\\06_reactProgressiveApp\\fishwatch\\src\\reportWebVitals.js",[],"C:\\Users\\m\\Documents\\Jobs\\CodeAcademyBerlin\\Projects\\06_reactProgressiveApp\\fishwatch\\src\\components\\List.js",["22"],"import React, { useEffect, useState } from 'react'\r\nimport ListItem from './ListItem'\r\n\r\n//create List\r\nconst List = () => {\r\n    //fishdata: my variable (array of fish), seFishData: is my setter of my variable. If this value gets changed, it will get updated\r\n    //we declare it with a useState because it will store value and get updated, when changed.\r\n    const [fishdata, setFishData] = useState()\r\n    \r\n   //useEffect: get data ONCE (not reload all the time)\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n        //fetch data asynchronously\r\n        const fetchData = async () => {\r\n            //workaround for fetching data with backend of cab\r\n            const response = await fetch(\"https://cab-cors-anywhere.herokuapp.com/https://www.fishwatch.gov/api/species/\")\r\n            const data = await response.json()\r\n            console.log('data', data)\r\n             //update variable fishdata\r\n            setFishData(data)\r\n    }\r\n    //check how fishdata looks like (printing outside of fetch-function ;)\r\n    console.log('fishdata', fishdata)\r\n\r\n    return (\r\n        <div>\r\n            {data ? data.map((item, index) => {\r\n                return (\r\n                    <ListItem item={item} />\r\n                )}\r\n            )} : <h2>Loading...</h2>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default List ",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":null,"fatal":true,"severity":2,"message":"27","line":32,"column":14},"no-native-reassign",["28"],"no-negated-in-lhs",["29"],"Parsing error: Unexpected token, expected \":\"\n\n\u001b[0m \u001b[90m 30 | \u001b[39m                    \u001b[33m<\u001b[39m\u001b[33mListItem\u001b[39m item\u001b[33m=\u001b[39m{item} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 31 | \u001b[39m                )}\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 32 | \u001b[39m            )} \u001b[33m:\u001b[39m \u001b[33m<\u001b[39m\u001b[33mh2\u001b[39m\u001b[33m>\u001b[39m\u001b[33mLoading\u001b[39m\u001b[33m...\u001b[39m\u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mh2\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 | \u001b[39m        \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m        \u001b[0m\n\u001b[0m \u001b[90m 35 | \u001b[39m    )\u001b[0m","no-global-assign","no-unsafe-negation"]